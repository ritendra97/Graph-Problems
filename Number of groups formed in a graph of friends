//Number of groups formed in a graph of friends
import java.util.ArrayList;
public class GraphProblem 
{
	int V;
	ArrayList<ArrayList<Integer>> graph;
	boolean visited[];
	GraphProblem(int v)
	{
		V=v;
		visited = new boolean[V];
		graph = new ArrayList<ArrayList<Integer>>(V);
		for(int i=0;i<V;i++)
		{
			graph.add(i,new ArrayList<Integer>());
		}
	}
	public void addEdge(int v,int w)
	{
		graph.get(v).add(w);
	}
	public void dfs(ArrayList<ArrayList<Integer>> result,ArrayList<Integer> path,int s)
	{
		path.add(s);
		visited[s]=true;
		for(Integer j:graph.get(s))
		{
			if(!visited[j])
			     dfs(result,path,j);
		}
	}
	public int getconnectedcomponents(int v)
	{
		int tnog=1;
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		for(int i=0;i<v;i++)
		{
		    if(!visited[i])
			{
				ArrayList<Integer> path = new ArrayList<Integer>();
				dfs(result,path,i);
				result.add(path);
			}
		}
		for(int i=0;i<result.size();i++)
		{
			tnog = tnog*result.get(i).size();
	    }
		return tnog;
	}
	public static void main(String[] args)
	{
		GraphProblem g = new GraphProblem(7);
		g.addEdge(0, 1);
		g.addEdge(2, 3);
		g.addEdge(4, 5);
		g.addEdge(5, 6);
		g.addEdge(4, 6);
		System.out.println(g.getconnectedcomponents(7));
	}
}
